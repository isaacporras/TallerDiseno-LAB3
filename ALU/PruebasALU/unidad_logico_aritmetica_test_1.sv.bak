module unidad_logico_aritmetica_test();
	logic[3:0] numero1, numero2, resultado;
	logic[3:0] ALUControl;
	logic flagNegativo;
	logic flagCero;
	logic flagOverflow;
	logic flagCarry;
	


	unidad_logico_aritmetica #(4) PRUEBA(numero1, numero2, ALUControl, resultado,flagNegativo,flagCero,flagOverflow,flagCarry);
	
	initial begin
	
	numero1 = 4'b1010;
	numero2 = 4'b0110;
	

		ALUControl = 4'b0000;//AND
		result = 4'b0011; 
		#10;
		assert(result === 1) else $error("Deteccion de error en la operacion xxxa");
		
		ALUControl = 4'b0001;//OR
		result = 4'b0011; 
		#10;
		assert(result === 1) else $error("Deteccion de error en la operacion xxxa");
			
		ALUControl = 4'b0010;//XOR
		result = 4'b0011; 
		#10;
		assert(result === 1) else $error("Deteccion de error en la operacion xxxa");
			
		ALUControl = 4'b0011;//NOT
		result = 4'b0011; 
		#10;
		assert(result === 1) else $error("Deteccion de error en la operacion xxxa");
	
		ALUControl = 4'b0100;//A Right shift
		result = 4'b0011; 
		#10;
		assert(result === 1) else $error("Deteccion de error en la operacion xxxa");
		
		ALUControl = 4'b0101;//A Left shift
		result = 4'b0011; 
		#10;
		assert(result === 1) else $error("Deteccion de error en la operacion xxxa");
	
		ALUControl = 4'b0110;//B Right shift
		result = 4'b0011; 
		#10;
		assert(result === 1) else $error("Deteccion de error en la operacion xxxa");
	
	
		ALUControl = 4'b0111;//B Left shift
		result = 4'b0011; 
		#10;
		assert(result === 1) else $error("Deteccion de error en la operacion xxxa");
	
		
		
		ALUControl = 4'b1000;//Sumador
		result = 4'b0011; 
		#10;
		assert(result === 1) else $error("Deteccion de error en la operacion xxxa");
	
	
		ALUControl = 4'b1001;//Restador
		result = 4'b0011; 
		#10;
		assert(result === 1) else $error("Deteccion de error en la operacion xxxa");
	
	
		ALUControl = 4'b1010;//A Right shift
		result = 4'b0011; 
		#10;
		assert(result === 1) else $error("Deteccion de error en la operacion xxxa");
		
		ALUControl = 4'b1011;//A Left shift
		result = 4'b0011; 
		#10;
		assert(result === 1) else $error("Deteccion de error en la operacion xxxa");
		
		ALUControl = 4'b1100;//B Right shift
		result = 4'b0011; 
		#10;
		assert(result === 1) else $error("Deteccion de error en la operacion xxxa");
		
		ALUControl = 4'b1101;//B Left shift
		result = 4'b0011; 
		#10;
		assert(result === 1) else $error("Deteccion de error en la operacion xxxa");
		

	end
	
endmodule 