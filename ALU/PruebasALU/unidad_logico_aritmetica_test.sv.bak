module unidad_logico_aritmetica_test();
	logic[3:0] numero1, numero2, resultado;
	logic[3:0] ALUControl;
	logic flagNegativo;
	logic flagCero;
	logic flagOverflow;
	logic flagCarry;



	unidad_logico_aritmetica #(4) PRUEBA(numero1, numero2, ALUControl, resultado,flagNegativo,flagCero,flagOverflow,flagCarry);
	
	initial begin
	
	
	//--------------------------------------------AND TESTS-------------------------------------------------------------------------

	numero1 = 4'b1010;//PRUEBA 1
	numero2 = 4'b0110;
	
	ALUControl = 4'b0000;//AND

	#15;
	assert(resultado === 4'b0010) $display("Prueba AND correcta"); else $display("Deteccion de error en la operacion AND");
	
	
	numero1 = 4'b1110;//PRUEBA 2
	numero2 = 4'b1000;
	

	#15;
	assert(resultado === 4'b1000) $display("Prueba AND correcta"); else $display("Deteccion de error en la operacion AND");
	
	numero1 = 4'b0111;//PRUEBA 3
	numero2 = 4'b0010;
	


	#15;
	assert(resultado === 4'b0010) $display("Prueba AND correcta"); else $display("Deteccion de error en la operacion AND");
	

	numero1 = 4'b0111;//PRUEBA 4
	numero2 = 4'b1011;
	


	#15;
	assert(resultado === 4'b0011) $display("Prueba AND correcta"); else $display("Deteccion de error en la operacion AND");
	
	numero1 = 4'b0101;//PRUEBA 5
	numero2 = 4'b0101;
	


	#15;
	assert(resultado === 4'b0101) $display("Prueba AND correcta"); else $display("Deteccion de error en la operacion AND");
	
	
	numero1 = 4'b0110;//PRUEBA 6
	numero2 = 4'b0100;
	


	#15;
	assert(resultado === 4'b0100) $display("Prueba AND correcta"); else $display("Deteccion de error en la operacion AND");
	
	//------------------------------PRUEBAS OR------------------------------------------------------------------
	
	numero1 = 4'b1010;//PRUEBA 1
	numero2 = 4'b0110;
	
	ALUControl = 4'b0001;//OR

	#15;
	assert(resultado === 4'b1110) $display("Prueba OR correcta"); else $display("Deteccion de error en la operacion OR");
	
	
	numero1 = 4'b1110;//PRUEBA 2
	numero2 = 4'b1000;
	
	#15;
	assert(resultado === 4'b1110) $display("Prueba OR correcta"); else $display("Deteccion de error en la operacion OR");
	
	numero1 = 4'b0111;//PRUEBA 3
	numero2 = 4'b0010;
	
	#15;
	assert(resultado === 4'b0111) $display("Prueba OR correcta"); else $display("Deteccion de error en la operacion OR");
	
	
	numero1 = 4'b0111;//PRUEBA 4
	numero2 = 4'b1011;
	
	#15;
	assert(resultado === 4'b1111) $display("Prueba OR correcta"); else $display("Deteccion de error en la operacion OR");
	
	
	numero1 = 4'b0101;//PRUEBA 5
	numero2 = 4'b0101;
	
	
	#15;
	assert(resultado === 4'b0101) $display("Prueba OR correcta"); else $display("Deteccion de error en la operacion OR");
	
		
	numero1 = 4'b0110;//PRUEBA 6
	numero2 = 4'b0100;
	
	#15;
	assert(resultado === 4'b0110) $display("Prueba OR correcta"); else $display("Deteccion de error en la operacion OR");
		
	
	//------------------------------PRUEBAS XOR------------------------------------------------------------------
	ALUControl = 4'b0010;//XOR
	
	
	numero1 = 4'b1010;//PRUEBA 1
	numero2 = 4'b0110;
	#15;
	assert(resultado === 4'b1100) $display("Prueba XOR correcta"); else $display("Deteccion de error en la operacion XOR");

	numero1 = 4'b1110;//PRUEBA 2
	numero2 = 4'b1000;

	
	#15;
	assert(resultado === 4'b0110) $display("Prueba XOR correcta"); else $display("Deteccion de error en la operacion XOR");
			
	
	numero1 = 4'b0111;//PRUEBA 3
	numero2 = 4'b0010;

	
	#15;
	assert(resultado === 4'b0101) $display("Prueba XOR correcta"); else $display("Deteccion de error en la operacion XOR");
		

	numero1 = 4'b0111;//PRUEBA 4
	numero2 = 4'b1011;


	#15;
	assert(resultado === 4'b1100) $display("Prueba XOR correcta"); else $display("Deteccion de error en la operacion XOR");
			
			
	numero1 = 4'b0101;//PRUEBA 5
	numero2 = 4'b0101;

	#15;
	assert(resultado === 4'b0000) $display("Prueba XOR correcta"); else $display("Deteccion de error en la operacion XOR");
			

	numero1 = 4'b0110;//PRUEBA 6
	numero2 = 4'b0100;
	

	
	#15;
	assert(resultado === 4'b0010) $display("Prueba XOR correcta"); else $display("Deteccion de error en la operacion XOR");
		
			
	
	
	
	
	//------------------------------PRUEBAS NOT------------------------------------------------------------------
	ALUControl = 4'b0011;//NOT
	
	numero1 = 4'b1010;//PRUEBA 1
	numero2 = 4'b0110;

	
	#15;
	assert(resultado === 4'b0101) $display("Prueba NOT correcta"); else $display("Deteccion de error en la operacion NOT");
	

	numero1 = 4'b1110;//PRUEBA 2
	numero2 = 4'b1000;

	
	#15;
	assert(resultado === 4'b0001) $display("Prueba NOT correcta"); else $display("Deteccion de error en la operacion NOT");
	
	
	numero1 = 4'b0111;//PRUEBA 3
	numero2 = 4'b0010;

	
	#15;
	assert(resultado === 4'b1000) $display("Prueba NOT correcta"); else $display("Deteccion de error en la operacion NOT");
	

	numero1 = 4'b0111;//PRUEBA 4
	numero2 = 4'b1011;

	
	#15;
	assert(resultado === 4'b1000) $display("Prueba NOT correcta"); else $display("Deteccion de error en la operacion NOT");
	

	numero1 = 4'b0101;//PRUEBA 5
	numero2 = 4'b0101;

	
	#15;
	assert(resultado === 4'b1010) $display("Prueba NOT correcta"); else $display("Deteccion de error en la operacion NOT");
	

	numero1 = 4'b0110;//PRUEBA 6
	numero2 = 4'b0100;
	
	
	#15;
	assert(resultado === 4'b1001) $display("Prueba NOT correcta"); else $display("Deteccion de error en la operacion NOT");
	

	
	//------------------------------PRUEBAS A RIGHT SHIFT LOGICAL------------------------------------------------------------------
	
	ALUControl = 4'b0100;//A Right shift
 
	
	numero1 = 4'b1010;//PRUEBA 1
	numero2 = 4'b0110;
	
	#15;
	assert(resultado === 4'b0101) $display("Prueba A RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion A RIGHT SHIFT LOGICAL");
		

	numero1 = 4'b1110;//PRUEBA 2
	numero2 = 4'b1000;

	
	#15;
	assert(resultado === 4'b0111) $display("Prueba A RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion A RIGHT SHIFT LOGICAL");
		
	
	numero1 = 4'b0111;//PRUEBA 3
	numero2 = 4'b0010;

	
	#15;
	assert(resultado === 4'b0011) $display("Prueba A RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion A RIGHT SHIFT LOGICAL");
		

	numero1 = 4'b0111;//PRUEBA 4
	numero2 = 4'b1011;

	
	#15;
	assert(resultado === 4'b0011) $display("Prueba A RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion A RIGHT SHIFT LOGICAL");
		

	numero1 = 4'b0101;//PRUEBA 5
	numero2 = 4'b0101;

	
	#15;
	assert(resultado === 4'b0010) $display("Prueba A RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion A RIGHT SHIFT LOGICAL");
		

	numero1 = 4'b0110;//PRUEBA 6
	numero2 = 4'b0100;
	
	#15;
	assert(resultado === 4'b0011) $display("Prueba A RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion A RIGHT SHIFT LOGICAL");
		
	
	//------------------------------PRUEBAS A LEFT SHIFT LOGICAL-----------------------------------------------------------------
	
	ALUControl = 4'b0101;//A Left shift
	
	numero1 = 4'b1010;//PRUEBA 1
	numero2 = 4'b0110;
	
	#15;
	assert(resultado === 4'b0100) $display("Prueba A LEFT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion A LEFT SHIFT LOGICAL");
	


	numero1 = 4'b1110;//PRUEBA 2
	numero2 = 4'b1000;

	
	#15;
	assert(resultado === 4'b1100) $display("Prueba A LEFT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion A LEFT SHIFT LOGICAL");
	
	
	numero1 = 4'b0111;//PRUEBA 3
	numero2 = 4'b0010;

	
	#15;
	assert(resultado === 4'b1110) $display("Prueba A LEFT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion A LEFT SHIFT LOGICAL");
	

	numero1 = 4'b0111;//PRUEBA 4
	numero2 = 4'b1011;

	
	#15;
	assert(resultado === 4'b1110) $display("Prueba A LEFT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion A LEFT SHIFT LOGICAL");
	

	numero1 = 4'b0101;//PRUEBA 5
	numero2 = 4'b0101;

	
	#15;
	assert(resultado === 4'b1010) $display("Prueba A LEFT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion A LEFT SHIFT LOGICAL");
	

	numero1 = 4'b0110;//PRUEBA 6
	numero2 = 4'b0100;
 
	
	#15;
	assert(resultado === 4'b1100) $display("Prueba A LEFT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion A LEFT SHIFT LOGICAL");
	
	
	//------------------------------PRUEBAS B RIGTH SHIFT LOGICAL-----------------------------------------------------------------
	
	
	ALUControl = 4'b0110;//B Right shift
	
	numero1 = 4'b1010;//PRUEBA 1
	numero2 = 4'b0110;

	
	#15;
	assert(resultado === 4'b0011) $display("Prueba B RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT LOGICAL");
	

	numero1 = 4'b1110;//PRUEBA 2
	numero2 = 4'b1000;
	
	 
	#15;
	assert(resultado === 4'b0100) $display("Prueba B RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT LOGICAL");
	

	numero1 = 4'b0111;//PRUEBA 3
	numero2 = 4'b0010;

	
	#15;
	assert(resultado === 4'b0001) $display("Prueba B RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT LOGICAL");
	

	numero1 = 4'b0111;//PRUEBA 4
	numero2 = 4'b1011;

	
	#15;
	assert(resultado === 4'b0101) $display("Prueba B RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT LOGICAL");
	

	numero1 = 4'b0101;//PRUEBA 5
	numero2 = 4'b0101;

	
	#15;
	assert(resultado === 4'b0010) $display("Prueba B RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT LOGICAL");
	

	numero1 = 4'b0110;//PRUEBA 6
	numero2 = 4'b0100;
	
	
	#15;
	assert(resultado === 4'b0010) $display("Prueba B RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT LOGICAL");
	
	 
	//------------------------------PRUEBAS B LEFT SHIFT LOGICAL-----------------------------------------------------------------
	
	ALUControl = 4'b0111;//B Left shift
	
	
	numero1 = 4'b1010;//PRUEBA 1
	numero2 = 4'b0110;
	
	#15;
	assert(resultado === 4'b1100) $display("Prueba B RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT LOGICAL");
	


	numero1 = 4'b1110;//PRUEBA 2
	numero2 = 4'b1000;

	
	#15;
	assert(resultado === 4'b0000) $display("Prueba B RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT LOGICAL");
	
	numero1 = 4'b0111;//PRUEBA 3
	numero2 = 4'b0010;


	#15;
	assert(resultado === 4'b0100) $display("Prueba B RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT LOGICAL");
	
	
	numero1 = 4'b0111;//PRUEBA 4
	numero2 = 4'b1011;

	
	#15;
	assert(resultado === 4'b0110) $display("Prueba B RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT LOGICAL");
	

	numero1 = 4'b0101;//PRUEBA 5
	numero2 = 4'b0101;

	
	#15;
	assert(resultado === 4'b1010) $display("Prueba B RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT LOGICAL");
	
		

	numero1 = 4'b0110;//PRUEBA 6
	numero2 = 4'b0100;
	
	
	#15;
	assert(resultado === 4'b1000) $display("Prueba B RIGHT SHIFT LOGICAL correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT LOGICAL");
	
	
	//------------------------------PRUEBAS SUMADOR-----------------------------------------------------------------
	
		
	ALUControl = 4'b1000;//Sumador
	
	
	numero1 = 4'b1010;//PRUEBA 1
	numero2 = 4'b0110;
	
	#15;
	assert(resultado === 4'b0000) $display("Prueba SUMA correcta"); else $display("Deteccion de error en la operacion SUMA");


	numero1 = 4'b1110;//PRUEBA 2
	numero2 = 4'b1000;
	
	
	#15;
	assert(resultado === 4'b0110) $display("Prueba SUMA correcta"); else $display("Deteccion de error en la operacion SUMA");
	

	numero1 = 4'b0111;//PRUEBA 3
	numero2 = 4'b0010;
	
	
	#15;
	assert(resultado === 4'b1001) $display("Prueba SUMA correcta"); else $display("Deteccion de error en la operacion SUMA");
	


	numero1 = 4'b0111;//PRUEBA 4
	numero2 = 4'b1011;

	
	#15;
	assert(resultado === 4'b0010) $display("Prueba SUMA correcta"); else $display("Deteccion de error en la operacion SUMA");
	

	numero1 = 4'b0101;//PRUEBA 5
	numero2 = 4'b0101;

	
	#15;
	assert(resultado === 4'b1010) $display("Prueba SUMA correcta"); else $display("Deteccion de error en la operacion SUMA");
	
	

	numero1 = 4'b0110;//PRUEBA 6
	numero2 = 4'b0100;
	
	
	#15;
	assert(resultado === 4'b1010) $display("Prueba SUMA correcta"); else $display("Deteccion de error en la operacion SUMA");
	
	
	
	//------------------------------PRUEBAS SUMADOR-----------------------------------------------------------------
	
	
	
	ALUControl = 4'b1001;//Restador
	
	
	numero1 = 4'b1010;//PRUEBA 1
	numero2 = 4'b0110;
	
	#15;
	assert(resultado === 4'b0100) $display("Prueba RESTA correcta"); else $display("Deteccion de error en la operacion RESTA");
	


	numero1 = 4'b1110;//PRUEBA 2
	numero2 = 4'b1000;
	
	
	#15;
	assert(resultado === 4'b0110) $display("Prueba RESTA correcta"); else $display("Deteccion de error en la operacion RESTA");
	

	numero1 = 4'b0111;//PRUEBA 3
	numero2 = 4'b0010;


	
	#15;
	assert(resultado === 4'b0101) $display("Prueba RESTA correcta"); else $display("Deteccion de error en la operacion RESTA");
	
	
	numero1 = 4'b0111;//PRUEBA 4
	numero2 = 4'b1011;

	
	#15;
	assert(resultado === 4'b1100) $display("Prueba RESTA correcta"); else $display("Deteccion de error en la operacion RESTA");
	

	numero1 = 4'b0101;//PRUEBA 5
	numero2 = 4'b0101;

	
	#15;
	assert(resultado === 4'b0000) $display("Prueba RESTA correcta"); else $display("Deteccion de error en la operacion RESTA");
	

	numero1 = 4'b0110;//PRUEBA 6
	numero2 = 4'b0100;
	
	
	#15;
	assert(resultado === 4'b0010) $display("Prueba RESTA correcta"); else $display("Deteccion de error en la operacion RESTA");
	
	
	//------------------------------PRUEBAS A RIGHT SHIFT ARITHMETIC-----------------------------------------------------------------
	
	ALUControl = 4'b1010;//A Right shift
	
	
	numero1 = 4'b1010;//PRUEBA 1
	numero2 = 4'b0110;

	#15;
	assert(resultado === 4'b1101) $display("Prueba A RIGHT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion A RIGHT SHIFT ARITHMETIC");
	

	numero1 = 4'b1110;//PRUEBA 2
	numero2 = 4'b1000;
	
	
	#15;
	assert(resultado === 4'b1111) $display("Prueba A RIGHT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion A RIGHT SHIFT ARITHMETIC");
	

	numero1 = 4'b0111;//PRUEBA 3
	numero2 = 4'b0010;

	
	#15;
	assert(resultado === 4'b0011) $display("Prueba A RIGHT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion A RIGHT SHIFT ARITHMETIC");
		

	numero1 = 4'b0111;//PRUEBA 4
	numero2 = 4'b1011;
	
	
	#15;
	assert(resultado === 4'b0011) $display("Prueba A RIGHT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion A RIGHT SHIFT ARITHMETIC");
		


	numero1 = 4'b0101;//PRUEBA 5
	numero2 = 4'b0101;
	
	
	#15;
	assert(resultado === 4'b0010) $display("Prueba A RIGHT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion A RIGHT SHIFT ARITHMETIC");
		


	numero1 = 4'b0110;//PRUEBA 6
	numero2 = 4'b0100;
	
	
	#15;
	assert(resultado === 4'b0011) $display("Prueba A RIGHT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion A RIGHT SHIFT ARITHMETIC");
		
	
	//------------------------------PRUEBAS A LEFT SHIFT ARITHMETIC-----------------------------------------------------------------
	
	ALUControl = 4'b1011;//A Left shift
		
	numero1 = 4'b1010;//PRUEBA 1
	numero2 = 4'b0110;
	
	
	#15;
	assert(resultado === 4'b0100) $display("Prueba A LEFT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion A LEFT SHIFT ARITHMETIC");
	


	numero1 = 4'b1110;//PRUEBA 2
	numero2 = 4'b1000;
	
	
	#15;
	assert(resultado === 4'b1100) $display("Prueba A LEFT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion A LEFT SHIFT ARITHMETIC");
	

	numero1 = 4'b0111;//PRUEBA 3
	numero2 = 4'b0010;
	
	
	#15;
	assert(resultado === 4'b1110) $display("Prueba A LEFT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion A LEFT SHIFT ARITHMETIC");
		


	numero1 = 4'b0111;//PRUEBA 4
	numero2 = 4'b1011;
	
	
	#15;
	assert(resultado === 4'b1110) $display("Prueba A LEFT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion A LEFT SHIFT ARITHMETIC");
		


	numero1 = 4'b0101;//PRUEBA 5
	numero2 = 4'b0101;
	
	
	#15;
	assert(resultado === 4'b1010) $display("Prueba A LEFT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion A LEFT SHIFT ARITHMETIC");
		


	numero1 = 4'b0110;//PRUEBA 6
	numero2 = 4'b0100;
	
	
	#15;
	assert(resultado === 4'b1100) $display("Prueba A LEFT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion A LEFT SHIFT ARITHMETIC");
		
		
	//------------------------------PRUEBAS B RIGHT SHIFT ARITHMETIC-----------------------------------------------------------------
	
	ALUControl = 4'b1100;//B Right shift
	
	
	numero1 = 4'b1010;//PRUEBA 1
	numero2 = 4'b0110;

	#15;
	assert(resultado === 4'b0011) $display("Prueba B RIGHT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT ARITHMETIC");
		

	numero1 = 4'b1110;//PRUEBA 2
	numero2 = 4'b1000;
	
	
	#15;
	assert(resultado === 4'b1100) $display("Prueba B RIGHT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT ARITHMETIC");
		

	numero1 = 4'b0111;//PRUEBA 3
	numero2 = 4'b0010;
	
	
	#15;
	assert(resultado === 4'b0001) $display("Prueba B RIGHT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT ARITHMETIC");
	


	numero1 = 4'b0111;//PRUEBA 4
	numero2 = 4'b1011;
	
	
	#15;
	assert(resultado === 4'b1101) $display("Prueba B RIGHT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT ARITHMETIC");
		


	numero1 = 4'b0101;//PRUEBA 5
	numero2 = 4'b0101;

	
	#15;
	assert(resultado === 4'b0010) $display("Prueba B RIGHT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT ARITHMETIC");
		

	numero1 = 4'b0110;//PRUEBA 6
	numero2 = 4'b0100;
	
	#15;
	assert(resultado === 4'b0010) $display("Prueba B RIGHT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion B RIGHT SHIFT ARITHMETIC");
			
	//------------------------------PRUEBAS B RIGHT SHIFT ARITHMETIC-----------------------------------------------------------------	
	
	
	ALUControl = 4'b1101;//B Left shift
	
	numero1 = 4'b1010;//PRUEBA 1
	numero2 = 4'b0110;

	#15;
	assert(resultado === 4'b1100) $display("Prueba B LEFT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion B LEFT SHIFT ARITHMETIC");
	

	numero1 = 4'b1110;//PRUEBA 2
	numero2 = 4'b1000;
	
	
	#15;
	assert(resultado === 4'b0000) $display("Prueba B LEFT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion B LEFT SHIFT ARITHMETIC");
		

	numero1 = 4'b0111;//PRUEBA 3
	numero2 = 4'b0010;

	#15;
	assert(resultado === 4'b0100) $display("Prueba B LEFT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion B LEFT SHIFT ARITHMETIC");
	

	numero1 = 4'b0111;//PRUEBA 4
	numero2 = 4'b1011;

	
	#15;
	assert(resultado === 4'b0110) $display("Prueba B LEFT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion B LEFT SHIFT ARITHMETIC");
		

	numero1 = 4'b0101;//PRUEBA 5
	numero2 = 4'b0101;
	
	
	#15;
	assert(resultado === 4'b1010) $display("Prueba B LEFT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion B LEFT SHIFT ARITHMETIC");
		


	numero1 = 4'b0110;//PRUEBA 6
	numero2 = 4'b0100;
	
	
	#15;
	assert(resultado === 4'b1000) $display("Prueba B LEFT SHIFT ARITHMETIC correcta"); else $display("Deteccion de error en la operacion B LEFT SHIFT ARITHMETIC");
		
	
	//-----------------------------------------------FIN---------------------------------------------------------------
	end
	
endmodule 